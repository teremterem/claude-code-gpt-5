services:
  litellm:
    # Build from your LiteLLM Server source code
    build: ..
    volumes:
      - ..:/app
      - litellm-app-venv:/app/.venv
      # To boost performance of `uv sync` operation
      - litellm-uv-cache:/root/.cache/uv

    # # If you want to use a pre-built image from your container registry:
    # #  1) Comment out the `build:` and `volumes:` entries above
    # #  2) Uncomment the `image:` entry below
    # #  3) Replace the image name with the one you built and pushed to your
    # #     container registry
    # image: ghcr.io/teremterem/my-litellm-server:latest

    container_name: LiteLLM-Server
    # ports:
    #   - "4000:4000"
    restart: unless-stopped
    env_file:
      # A dummy value for LITELLM_MASTER_KEY to avoid error if it is not set in
      # ../.env (the .env of the LiteLLM Server itself)
      - .env.non-secure-litellm-master-key
      # If LITELLM_MASTER_KEY is set in ../.env, it will override the dummy
      # value from the file above
      - ../.env

  api:
    # Let's pin LibreChat to a specific image version
    image: ghcr.io/danny-avila/librechat:v0.8.0
    # If you want to use your own pre-built LibreChat image from your container
    # registry:
    #  1) Replace the image name above with the one you built and pushed to your
    #     container registry
    #  2) If you already baked your custom librechat.yaml file into your image,
    #     comment out the `volumes:` entry below so it doesn't get overridden
    volumes:
      - ./librechat.yaml:/app/librechat.yaml

    depends_on:
      - litellm
      - mongodb
      - rag_api
    env_file:
      # A dummy value for LITELLM_MASTER_KEY to avoid error if it is not set in
      # ../.env (the .env of the LiteLLM Server itself)
      - .env.non-secure-litellm-master-key
      # If LITELLM_MASTER_KEY is set in ../.env, it will override the dummy
      # value from the file above
      - ../.env
      # Load .env from LibreChat (will override everything else in case of
      # variable name conflicts)
      - .env
    environment:
      - LITELLM_BASE_URL=http://litellm:4000/v1

  rag_api:
    # Let's pin LibreChat RAG API to a specific image version
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:v0.6.0
    # TODO 2025-10-14: The "latest" version of LibreChat RAG API (which is
    #  referenced in the original docker-compose.yml file) was built almost one
    #  month later, than the most recent numbered version "v0.6.0", but does
    #  not have its own version number.
    #  Should we go back to using "latest" instead of "v0.6.0" ?
    #  Is there any difference between the two ?

volumes:
  litellm-app-venv:
  litellm-uv-cache:
